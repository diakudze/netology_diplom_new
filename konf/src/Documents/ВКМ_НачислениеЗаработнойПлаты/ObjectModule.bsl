#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
		
		Ответственный = Пользователи.ТекущийПользователь();
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
		//Получаем размер НДФЛ
		Выборка_СтавкаНДФЛ = ПолучитьАктуальныйПроцентСтавкиНДФЛ();  
		
		//Проверка/Получение НДФЛ
		Если Не Выборка_СтавкаНДФЛ.Следующий() Тогда
			ОбщегоНазначения.СообщитьПользователю("Не установлен процент НДФЛ.");
			Отказ = Истина; 
		Иначе
			Выборка_СтавкаНДФЛ.Следующий();
			СтавкаНДФЛ = Выборка_СтавкаНДФЛ.Значение;
		КонецЕсли; 
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;  
		
		
		СоздатьДвиженияОсновныеДвижения(); 
		СоздатьДвиженияУдержаний(СтавкаНДФЛ);	
		СформироватьСторноЗаписи();          
		
		Движения.ВКМ_ОсновныеНачисления.Записать();
		Движения.ВКМ_Удержания.Записать();
		
		
		//Функция возвращает ИСТИНА, если не указан оклад у сотрудника. 
		Результат = РасчетСуммыОкладаИСуммыПроцентОтВыплаты();
		Если Результат = Истина Тогда
			Отказ = Истина;
		КонецЕсли;
		
		
		РасчетОтпуска();  
		
		РассчитатьНДФЛ();
		
		СформироватьДвиженияПоВзаиморасчетам(); 
		СформироватьДвиженияПоВыполненнымСотрудникомРаботам();
		
		
	КонецПроцедуры
	
	Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		Для каждого Строка Из ОсновныеНачисления Цикл
			Если Месяц(Строка.ДатаНачала) <> Месяц(Строка.ДатаОкончания) Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не верно задан период в строке №%1", Строка.НомерСтроки)); 
				Отказ = Истина; 
			КонецЕсли;
		КонецЦикла;  
	КонецПроцедуры   
	
	#КонецОбласти
	
	
	#Область СлужебныеПроцедурыИФункции
	//Функция возвращает процент ставки НДФЛ на дату документа.
	Функция ПолучитьАктуальныйПроцентСтавкиНДФЛ();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ПроцентСтавкиНДФЛСрезПоследних.НДФЛ КАК НДФЛ,
		|	ВКМ_ПроцентСтавкиНДФЛСрезПоследних.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ВКМ_СтавкаНДФЛ.СрезПоследних(&Дата, ) КАК ВКМ_ПроцентСтавкиНДФЛСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", Дата);
		
		Возврат Запрос.Выполнить().Выбрать();
		
	КонецФункции
	
	Процедура СоздатьДвиженияОсновныеДвижения()
		
		//Создаем движения ОсновныеНачисления
		Для Каждого Строка Из ОсновныеНачисления Цикл  
			
			//регистр ОсновныеНачисления
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодДействияНачало = НачалоДня(Строка.ДатаНачала);
			Движение.ПериодДействияКонец = КонецДня(Строка.ДатаОкончания);
			Движение.ПериодРегистрации = НачалоДня(НачалоМесяца(Строка.ДатаНачала));
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ГрафикРаботы = Строка.ГрафикРаботы; 
			
			
			Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
				Движение.БазовыйПериодНачало =  НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала,-12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания,-1)); 
			Иначе
				Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
				Движение.БазовыйПериодКонец  = КонецМесяца(Дата)-1;  
			КонецЕсли;       
			
		КонецЦикла;
		
	КонецПроцедуры           
	
	Процедура СоздатьДвиженияУдержаний(СтавкаНДФЛ);
		
		
		ТЗ_данные = ОсновныеНачисления.Выгрузить();
		ТЗ_данные.Свернуть("Сотрудник",);
		
		Если ЗначениеЗаполнено(ТЗ_данные) Тогда  
			
			Для Каждого Строка Из ТЗ_данные Цикл
				//регистр Удержания
				Движение_Удержания = Движения.ВКМ_Удержания.Добавить();
				Движение_Удержания.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
				Движение_Удержания.ПериодДействияНачало = НачалоМесяца(Дата);
				Движение_Удержания.ПериодРегистрации = НачалоМесяца(Дата);
				Движение_Удержания.Сотрудник = Строка.Сотрудник;
				Движение_Удержания.СтавкаНДФЛ = СтавкаНДФЛ;  
				
				Движение_Удержания.БазовыйПериодНачало = НачалоМесяца(Дата);
				Движение_Удержания.БазовыйПериодКонец  = КонецМесяца(Дата)-1; 
			КонецЦикла;
		КонецЕсли;  
		
		Движения.ВКМ_Удержания.Записать();
		
	КонецПроцедуры
	
	Процедура РассчитатьНДФЛ()
		
		Запрос = Новый Запрос();
		                                                                                    
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК База,
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СтавкаНДФЛ КАК СтавкаНДФЛ,
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки
		               |ИЗ
		               |	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, , Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СтавкаНДФЛ,
		               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0),
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Сотрудник,
		               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки";
		
		Измерения = Новый Массив;         
		Измерения.Добавить("Сотрудник"); 
		
				
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Измерения", Измерения);
				
		Выборка = Запрос.Выполнить().Выбрать(); 
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1]; 
			Движение.СуммаНДФЛ = Выборка.База * Число(Движение.СтавкаНДФЛ) / 100; 
		КонецЦикла;
		Движения.ВКМ_Удержания.Записать(, Истина);
		
		
	КонецПроцедуры
	
	Процедура СформироватьСторноЗаписи()
		
		СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
		
		Для Каждого Запись Из СторноЗаписи Цикл
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Запись);
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
			Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
			Движение.Сумма = 0;
			Движение.ОтработаноДней = 0;
			Движение.Сторно = Истина;
			
		КонецЦикла;
		
	КонецПроцедуры    
	
	Функция РасчетСуммыОкладаИСуммыПроцентОтВыплаты()
		
		Отказ = Ложь;
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия КАК Факт,
		|	ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия КАК План,
		|	СведенияОСотрудникахСрезПоследних.Оклад КАК Оклад,
		|	СведенияОСотрудникахСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_Предварительно
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И (ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.Оклад)
		|					ИЛИ ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтВыполненыхРабот))) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, ) КАК СведенияОСотрудникахСрезПоследних
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = СведенияОСотрудникахСрезПоследних.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Предварительно.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТ_Предварительно.Факт, 0) КАК Факт,
		|	ЕСТЬNULL(ВТ_Предварительно.План, 0) КАК План,
		|	ВТ_Предварительно.ПроцентОтРабот КАК ПроцентОтРабот,
		|	ВТ_Предварительно.ВидРасчета КАК ВидРасчета,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот,
		|	ВТ_Предварительно.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_Предварительно.Оклад, 0) КАК Оклад,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот КАК ЧасовКОплатеОборот
		|ИЗ
		|	ВТ_Предварительно КАК ВТ_Предварительно
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, ДОБАВИТЬКДАТЕ(&ОкончаниеПериода, МИНУТА, 1), , ) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВТ_Предварительно.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник";
		
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата)); 
		Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Дата));

		
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1]; 
			
			Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
				
				Если Выборка.Оклад = 0 Тогда              
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ("Для сотрудника " + Выборка.Сотрудник + " не указан оклад на дату документа.");
					Сообщение.Сообщить(); 
					Отказ = Истина;
				КонецЕсли;
				
				Если Выборка.План = 0 Тогда
					
					Движение.Сумма = 0; 
					
				Иначе  
					
					Движение.Показатель = Выборка.Оклад;   
					Движение.ОтработаноДней = Выборка.Факт; 
					Движение.Сумма = Движение.Показатель * Выборка.Факт / Выборка.План;
				КонецЕсли; 
				
			ИначеЕсли Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтВыполненыхРабот Тогда
				
				Если Выборка.План = 0 Тогда
					
					Движение.Сумма = 0; 
					
				Иначе  
					
					Движение.Сумма = Выборка.СуммаКОплатеОборот;
					Движение.ЧасовКОплате = Выборка.ЧасовКОплатеОборот;
					
				КонецЕсли; 
				
			КонецЕсли; 
			
				
		КонецЦикла;  
		
		Если НЕ Отказ Тогда
			Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
		КонецЕсли;
		
		Возврат Отказ
		
	КонецФункции  
	
	Процедура РасчетОтпуска();
		
		
		Запрос = Новый Запрос; 
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		               |	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.СуммаБаза, 0) КАК База,
		               |	РАЗНОСТЬДАТ(ОсновныеНачисленияБазаОсновныеНачисления.ПериодДействияНачало, ОсновныеНачисленияБазаОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней,
		               |	ОсновныеНачисленияБазаОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДнейБаза,
		               |	ОсновныеНачисленияБазаОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
		               |	ОсновныеНачисленияБазаОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
		               |	ОсновныеНачисленияБазаОсновныеНачисления.Сотрудник КАК Сотрудник,
		               |	ОсновныеНачисленияБазаОсновныеНачисления.Сотрудник КАК Сотрудник1
		               |ПОМЕСТИТЬ ВТ_ОсновныеНачисления
		               |ИЗ
		               |	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		               |			&Измерения,
		               |			&Измерения,
		               |			,
		               |			Регистратор = &Ссылка
		               |				И ВидРасчета = &Отпуск) КАК ОсновныеНачисленияБазаОсновныеНачисления
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	МИНИМУМ(ЕСТЬNULL(ДополнительныеНачисления.Сумма, 0)) КАК Сумма,
		               |	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДополнительныеНачисления.ПериодРегистрации) КАК ПериодРегистрации
		               |ПОМЕСТИТЬ ВТ_ДополнительныеНачитсления
		               |ИЗ
		               |	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ДополнительныеНачисления,
		               |	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		               |ГДЕ
		               |	ДополнительныеНачисления.БазовыйПериодНачало >= ВТ_ОсновныеНачисления.БазовыйПериодНачало
		               |	И ДополнительныеНачисления.БазовыйПериодКонец <= ВТ_ОсновныеНачисления.БазовыйПериодКонец
		               |	И ДополнительныеНачисления.Сотрудник = ВТ_ОсновныеНачисления.Сотрудник
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ДополнительныеНачисления.Сотрудник
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_ДополнительныеНачитсления.Сумма, 0) КАК СуммаДопНачислений,
		               |	ВТ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		               |	ЕСТЬNULL(ВТ_ОсновныеНачисления.База, 0) КАК СуммаОсновныхНачислений,
		               |	ВТ_ОсновныеНачисления.ФактДней КАК ФактДней,
		               |	ЕСТЬNULL(ВТ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза,
		               |	ВТ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
		               |	ВТ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
		               |	ВТ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		               |	ВТ_ДополнительныеНачитсления.ПериодРегистрации КАК ПериодРегистрации
		               |ИЗ
		               |	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачитсления КАК ВТ_ДополнительныеНачитсления
		               |		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачитсления.Сотрудник";
		
		Измерения = Новый Массив; 
		Измерения.Добавить("Сотрудник"); 
		//Измерения.Добавить("Подразделение"); 
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);   
		Запрос.УстановитьПараметр("Измерения", Измерения);
		Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
		
		
		Запрос.УстановитьПараметр("Период", Дата);
		
		РезультатЗапроса = Запрос.Выполнить();  
		
		Выборка = РезультатЗапроса.Выбрать();  
		
		
		Пока Выборка.Следующий() Цикл
			//Основные начисления
			Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки-1];   
			Движение.Показатель = (Выборка.СуммаОсновныхНачислений + Выборка.СуммаДопНачислений) / Выборка.ОтработаноДнейБаза;
			Движение.Сумма = Выборка.ФактДней * Движение.Показатель;  
			
			
			//Движенимя РН ВКМ_ОтпускаСотрудников
			Движения.ВКМ_ОтпускаСотрудников.Записывать = Истина;
			ДвижениеОтпуск = Движения.ВКМ_ОтпускаСотрудников.ДобавитьРасход();
			ДвижениеОтпуск.Период = НачалоМесяца(Дата);
			ДвижениеОтпуск.ДнейОтпуска = Выборка.ФактДней;
			ДвижениеОтпуск.Год = КонецМесяца(Дата);
			ДвижениеОтпуск.Сотрудник = Выборка.Сотрудник;
			
		КонецЦикла;
		Движения.ВКМ_ОтпускаСотрудников.Записать(Истина);
		Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
		
	КонецПроцедуры
	
	Процедура СформироватьДвиженияПоВзаиморасчетам()
		
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина; 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ОсновныеНачисления.Сумма, 0)) КАК Сумма
		|ПОМЕСТИТЬ ВТ_начисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.Сумма > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	СУММА(-ВКМ_Удержания.СуммаНДФЛ)
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Регистратор
		|	И ВКМ_Удержания.СуммаНДФЛ > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_начисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_начисления.Сумма) КАК Сумма
		|ИЗ
		|	ВТ_начисления КАК ВТ_начисления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_начисления.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_начисления.Сотрудник";
		
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();          
		Выборка = РезультатЗапроса.Выбрать();
		
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();  
			Движение.Период = Дата;   
			Движение.Сотрудник = Выборка.Сотрудник; 
			Движение.Сумма = Выборка.Сумма;  
		КонецЦикла;
		
		
		
	КонецПроцедуры
	
	Процедура СформироватьДвиженияПоВыполненнымСотрудникомРаботам()
		
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ОсновныеНачисления.Сумма, 0)) КАК Сумма,
		|	СУММА(ОсновныеНачисления.ЧасовКОплате) КАК ЧасовКОплате
		|ПОМЕСТИТЬ ВТ_начисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.Сумма > 0
		|	И ОсновныеНачисления.ВидРасчета = &ВидРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_начисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_начисления.Сумма) КАК Сумма,
		|	СУММА(ВТ_начисления.ЧасовКОплате) КАК ЧасовКОплате
		|ИЗ
		|	ВТ_начисления КАК ВТ_начисления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_начисления.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_начисления.Сотрудник";
		
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентОтВыполненыхРабот);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.ДобавитьРасход();  
			Движение.Период = Дата;   
			Движение.Сотрудник = Выборка.Сотрудник; 
			Движение.СуммаКОплате = Выборка.Сумма;
			Движение.ЧасовКОплате = Выборка.ЧасовКОплате; 
		КонецЦикла;
		
		
		
	КонецПроцедуры
	
	#КонецОбласти
	
#КонецЕсли




