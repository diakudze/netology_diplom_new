#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		
		Ответственный = Пользователи.ТекущийПользователь();  
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, РежимПроведения)
		
		
		//Получаем размер НДФЛ
		Выборка_СтавкаНДФЛ = ПолучитьАктуальныйПроцентСтавкиНДФЛ();  
		
		
		Если Не Выборка_СтавкаНДФЛ.Следующий() Тогда
			
			ОбщегоНазначения.СообщитьПользователю("Не установлен процент НДФЛ.");
			Отказ = Истина; 
		Иначе
			Выборка_СтавкаНДФЛ.Следующий();
			СтавкаНДФЛ = Выборка_СтавкаНДФЛ.Значение;
		КонецЕсли; 
		
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;  
		
		Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина; 
		Движения.ВКМ_Удержания.Записывать = Истина;   
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;  
		
		СоздатьДвижения();  
		СоздатьДвиженияУдержаний(СтавкаНДФЛ);
		РассчитатьНДФЛ();

		 
		Движения.ВКМ_ДополнительныеНачисления.Записать(Истина);  
		
		СформироватьДвиженияПоВзаиморасчетам();    
		
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать(Истина);  
		
	КонецПроцедуры 
	
	#КонецОбласти
	
	
	#Область СлужебныеПроцедурыИФункции   
	
	//Функция возвращает процент ставки НДФЛ на дату документа.
	Функция ПолучитьАктуальныйПроцентСтавкиНДФЛ();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ПроцентСтавкиНДФЛСрезПоследних.НДФЛ КАК НДФЛ,
		|	ВКМ_ПроцентСтавкиНДФЛСрезПоследних.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ВКМ_СтавкаНДФЛ.СрезПоследних(&Дата, ) КАК ВКМ_ПроцентСтавкиНДФЛСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", Дата);
		
		Возврат Запрос.Выполнить().Выбрать();
		
	КонецФункции   
	
	Процедура СоздатьДвижения()
		
				
		//Создаем движения ОсновныеНачисления
		Для Каждого Строка Из СписокСотрудников Цикл  
			//регистр ОсновныеНачисления
			
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
			Движение.ПериодДействияНачало = НачалоМесяца(Дата);
			//Движение.ПериодДействияКонец = КонецМесяца(Дата); 
			Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
			Движение.БазовыйПериодКонец = КонецМесяца(Дата);
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.Сумма = Строка.СуммаПремии; 
						
		КонецЦикла;
		
		Движения.ВКМ_ДополнительныеНачисления.Записать(); 
		
	КонецПроцедуры

	Процедура СоздатьДвиженияУдержаний(СтавкаНДФЛ);
		
		
		ТЗ_Список = СписокСотрудников.Выгрузить();
		ТЗ_Список.Свернуть("Сотрудник",);
		
		Если ЗначениеЗаполнено(ТЗ_Список) Тогда  
			
			Для Каждого Строка Из ТЗ_Список Цикл
				//регистр Удержания
				Движение_Удержания = Движения.ВКМ_Удержания.Добавить();
				Движение_Удержания.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
				//Движение_Удержания.ПериодДействияНачало = НачалоМесяца(Дата);
				//Движение_Удержания.ПериодДействияКонец = КонецМесяца(Дата);
				Движение_Удержания.ПериодРегистрации = НачалоМесяца(Дата);
				Движение_Удержания.Сотрудник = Строка.Сотрудник;
				Движение_Удержания.СтавкаНДФЛ = СтавкаНДФЛ;  
				
				Движение_Удержания.БазовыйПериодНачало = НачалоМесяца(Дата);
				Движение_Удержания.БазовыйПериодКонец  = КонецМесяца(Дата)-1;  
					
			КонецЦикла;
		КонецЕсли; 
		
		Движения.ВКМ_Удержания.Записать();

	КонецПроцедуры
	
	Процедура РассчитатьНДФЛ()
		
		Запрос = Новый Запрос();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК База,
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СтавкаНДФЛ КАК СтавкаНДФЛ,
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки
		               |ИЗ
		               |	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, , Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СтавкаНДФЛ,
		               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0),
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.Сотрудник,
		               |	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки";
		
		Измерения = Новый Массив;         
		Измерения.Добавить("Сотрудник"); 
		
		Разрезы = Новый Массив;
		Разрезы.Добавить("ВидРасчета");

		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Измерения", Измерения);
		Выборка = Запрос.Выполнить().Выбрать();
		
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1]; 
			Движение.СуммаНДФЛ = Выборка.База * Число(Движение.СтавкаНДФЛ) / 100;
		КонецЦикла; 
		
		Движения.ВКМ_Удержания.Записать(, Истина);  
		
	КонецПроцедуры

	Процедура СформироватьДвиженияПоВзаиморасчетам()
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ДополнительныеНачисления.Сумма, 0)) КАК Сумма
		|ПОМЕСТИТЬ ВТ_начисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ДополнительныеНачисления
		|ГДЕ
		|	ДополнительныеНачисления.Регистратор = &Регистратор
		|	И ДополнительныеНачисления.Сумма > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ДополнительныеНачисления.Сотрудник
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник,
		|	СУММА(-ВКМ_Удержания.СуммаНДФЛ)
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Регистратор
		|	И ВКМ_Удержания.СуммаНДФЛ > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_начисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_начисления.Сумма) КАК Сумма
		|ИЗ
		|	ВТ_начисления КАК ВТ_начисления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_начисления.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_начисления.Сотрудник";
		
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();  
			Движение.Период = Дата;   
			Движение.Сотрудник = Выборка.Сотрудник; 
			Движение.Сумма = Выборка.Сумма;  
		КонецЦикла;
		
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;  
		
	КонецПроцедуры
	
	#КонецОбласти  
	
#КонецЕсли






